Master Installation:-

vim /etc/yum.repos.d/k8s.repo

[Docker]
name = Docker Repository
baseurl = https://nexus.rril.ril.com/repository/docker-ce-8
gpgcheck = 0
enabled = 1

[Kubernetes]
name = Kubernetes
baseurl = https://nexus.rril.ril.com/repository/kubernetes
gpgcheck = 0
enabled = 1

vim /etc/hosts

10.110.251.13  vijaywada.k8s.co

10.21.58.25 nexus.rril.ril.com

yum update -y 

swapoff -a
free -h

yum install kubelet kubeadm kubectl iproute-tc docker-ce golang -y


mkdir /etc/docker/
cd /etc/docker/
vim daemon.json

{
"exec-opts": ["native.cgroupdriver=systemd"],
"log-driver": "json-file",
"log-opts": {
"max-size": "100m"
},
"data-root": "/application/docker",
"storage-driver": "overlay2"
}


systemctl daemon-reload

systemctl enable docker
systemctl restart docker
systemctl status docker

systemctl enable kubelet
systemctl start kubelet


sed -i "s|net.ipv4.ip_forward = 0|net.ipv4.ip_forward = 1|g" /etc/sysctl.conf && echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.conf && echo "net.bridge.bridge-nf-call-arptables = 1" >> /etc/sysctl.conf && echo "fs.inotify.max_user_watches=524288" >> /etc/sysctl.conf && echo "vm.max_map_count = 262244" >> /etc/sysctl.conf && sudo sysctl --system

sed -i 's/\(.*\)/\L\1/' /etc/hosts
sed -i 's/\(.*\)/\L\1/' /etc/hostname
hostname
sed -i 's/\(.*\)/\L\1/' /etc/hostname
hostname
cat /etc/hosts
cat /etc/hostname


modprobe br_netfilter
cd /tmp/
ll
tar zxf cri-dockerd.tar.gz
cd cri-dockerd/

make cri-dockerd
git config --global --add safe.directory /opt/cri-dockerd
make cri-dockerd

install -o root -m 0755 cri-dockerd /usr/bin/cri-dockerd
install packaging/systemd/* /etc/systemd/system


systemctl daemon-reload
vim /etc/systemd/system/cri-docker.service

ExecStart=/usr/bin/cri-dockerd --pod-infra-container-image docker.rril.ril.com/kubernetes/pause:3.9 --container-runtime-endpoint fd://  --network-plugin=cni
 
 {add above line is used for the dockerimage purpose}

systemctl start cri-docker.service
systemctl enable cri-docker.service

systemctl enable cri-docker.socket
systemctl start cri-docker.socket

systemctl status cri-docker.socket
systemctl status cri-docker.service


docker pull docker.rril.ril.com/kubernetes/pause:3.9
docker images


kubeadm --cri-socket /var/run/cri-dockerd.sock init --control-plane-endpoint "badli-fl.k8s.ko:6443" --upload-certs --image-repository docker.rril.ril.com/kubernetes --apiserver-cert-extra-sans=10.101.2.173,10.101.2.174,10.101.2.153,10.101.2.154,10.101.2.155,badli-fl.k8s.ko --kubernetes-version v1.30.0

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
  
  
kubectl get po -A
git clone https://git.rril.ril.com/Retail-Devops/kubernetes-dashboard.git
git clone https://git.rril.ril.com/Retail-Devops/kubernetes-ingress.git
cd kubernetes-dashboard/
ls
kubectl apply -f network-weave.yaml		


For Multi master adding:-
->->->->->->->->->->->->->
kubeadm init phase upload-certs --upload-certs 
* 24db7cb6f57af169652ea56dacfda90b68f9ed42aa8863ea036eaaef5664f9de 


kubeadm token create --print-join-command 
* kubeadm join 10.21.68.179:6443 --token dz3eqx.c5mu76ahu7bu523t --discovery-token-ca-cert-hash sha256:173c518fd0eb3b34eef92a482a6ae98a275697d624f1ae756248abd3f30e8451

Multi-Master - kubeadm join 10.21.68.179:6443 --token dz3eqx.c5mu76ahu7bu523t --discovery-token-ca-cert-hash sha256:173c518fd0eb3b34eef92a482a6ae98a275697d624f1ae756248abd3f30e8451 --control-plane --certificate-key 24db7cb6f57af169652ea56dacfda90b68f9ed42aa8863ea036eaaef5664f9de --cri-socket /var/run/cri-dockerd.sock

For worker adding:-
->->->->->->->->->->
* kubeadm join 10.21.68.179:6443 --token dz3eqx.c5mu76ahu7bu523t --discovery-token-ca-cert-hash sha256:173c518fd0eb3b34eef92a482a6ae98a275697d624f1ae756248abd3f30e8451
--cri-socket /var/run/cri-dockerd.sock

kubeadm join amta.prod.ko:6443 --token g38v4e.bgsc7d4673eqtznn --discovery-token-ca-cert-hash sha256:eb494dfe7fec338337debeb960f6e6cb1a02daa3e6ea6d65d835259dc482831e  --cri-socket /var/run/cri-dockerd.sock

HA PROXY:-
->->->->->
1.yum install haproxy -y
2. vim /etc/haproxy/haproxy.cfg

#---------------------------------------------------------------------
# main frontend which proxys to the backends                                   
#---------------------------------------------------------------------
frontend fe-apiserver
   bind 0.0.0.0:6443
   mode tcp
   option tcplog
   default_backend be-apiserver

backend be-apiserver
   mode tcp
   option tcp-check
   balance roundrobin
   default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100

       server master1 10.21.68.179:6443 check
       server master2 10.21.68.180:6443 check



sed -i "s/exclude/#exclude/g" /etc/yum.conf /etc/dnf/dnf.conf
kubeadm reset -f && systemctl stop docker.service docker.socket kubelet && yum remove docker-ce kubeadm kubelet kubectl -y && rm -rf /etc/kubernetes /var/lib/kubelet /root/.kube



signoz@ril.com
Signoz@123



mount -t cgroup -o devices cgroup /sys/fs/cgroup/devices

#Cluster Problem Workaround.


rm -rf ~/.kube /etc/kubernetes /var/lib/kubelet /var/lib/etcd /var/lib/cni /var/run/kubernetes
docker stop $(docker ps -aq)
docker rm $(docker ps -aq)
docker rmi $(docker images -q)
iptables --flush
iptables -tnat --flush
systemctl restart networking
reboot
